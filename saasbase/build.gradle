apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
def libs = rootProject.ext.libraries
def cfg = rootProject.ext.configuration

android {
  compileSdkVersion cfg.compileVersion
  buildToolsVersion cfg.buildToolsVersion
  dataBinding {
    enabled true
  }

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary true
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [fragmentArgsLib: 'true',
                     fragmentArgsSupportAnnotations: 'true',
                     packageName: 'cn.qingchengfit.saasbase',]
      }
    }
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    //        manifestPlaceholders = [APP_SCHAME        : "qcstaff"]
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      minifyEnabled false
      shrinkResources false
      debuggable true

      debug {
        ext.enableCrashlytics = false
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.1"
    resolutionStrategy.force "com.android.support:support-v4:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-v13:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:cardview-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:design:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:percent:${libs.supportVersion}"
  }
  sourceSets {
    main {
      res.srcDirs = ['src/main/res']
    }
  }
  android {
    lintOptions {
      abortOnError false
    }
  }

}

dependencies {
  api project(':saascommon')

  api 'cn.qingchengfit.weex:weex:1.0.180601'
  api 'cn.qingchengfit.recruit:recruit:1.1.180613'
  annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger}"


  annotationProcessor "com.anbillon.flabellum:flabellum-processor:${libs.flabellum}"
  annotationProcessor "com.anbillon.flabellum:dagger2:${libs.flabellum}"

  api 'android.arch.lifecycle:reactivestreams:1.0.0'
  annotationProcessor "com.hannesdorfmann.fragmentargs:processor:${libs.fragmentArg}"
  api 'me.gujun.android.taggroup:library:1.4@aar'
  api 'android.arch.lifecycle:common-java8:1.0.0'
  //    // Room
  api 'android.arch.persistence.room:runtime:1.0.0'
  annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
  api 'io.reactivex.rxjava2:rxandroid:2.0.1'
  api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}


group 'cn.qingchengfit.saas'
version '1.0.5'

uploadArchives {

  repositories {
    mavenDeployer {
      repository(url: uri('../repo'))
      pom.artifactId = 'sass'
    }
  }
}
repositories {
  mavenCentral()
}

