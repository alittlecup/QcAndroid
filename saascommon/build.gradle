apply plugin: 'com.android.library'
apply from: rootProject.file('qc_upload_maven.gradle')
apply from: rootProject.file('qc_component.gradle')

def libs = rootProject.ext.libraries
def cfg = rootProject.ext.configuration

def dependens = rootProject.ext.dependencies
def annotations = rootProject.ext.annotations
android {
  compileSdkVersion 27

  dataBinding {
    enabled true
  }

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary true
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [fragmentArgsLib               : 'true',
                     fragmentArgsSupportAnnotations: 'true',
                     packageName                   : 'cn.qingchengfit.saascommon',]
      }
    }
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  addApiComponent("qcbase",false)

  addApiComponent("qcbase",false)
  addApiComponent("weex",false)
  addApiComponent("recruit",false)

  api(dependens["taglib"]){
    exclude group: 'com.android.support'
  }

  api dependens["MPAndroidChart"]

  annotationProcessor annotations["dagger-compiler"]
  annotationProcessor annotations["dagger-android-processor"]

  annotationProcessor annotations["fragmentargs"]




}
