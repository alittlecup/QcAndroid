apply plugin: 'com.android.application'
apply from: rootProject.file('qc_component.gradle')

def libs = rootProject.ext.libraries
def cfg = rootProject.ext.configuration

def getDate() {
  def date = new Date()
  def formattedDate = date.format('yyyyMMddHHmm')
  return formattedDate
}

def overrideMapsKey(buildVariant) {
  def appName = getAppName(buildVariant)

  // override line ... this is not necessary to this question

  renameAPK(buildVariant, appName)
}

// *** RENAME APK ***
def renameAPK(buildVariant, appName) {
  def apk = buildVariant.packageApplication.outputFile
  def newName = ""

  // get data for apk renaming
  def versionName = android.defaultConfig.versionName
  def versionNameSuffix = buildVariant.buildType.versionNameSuffix
  if (versionNameSuffix.toString().equals("null")) versionNameSuffix = ""
  def buildTypeOfApp = buildVariant.buildType.name

  if (buildVariant.zipAlign) {
    //        newName = "etscanner-" + appName + "-" + buildTypeOfApp.toUpperCase() + "-v" + versionName + versionNameSuffix + ".apk"
    newName = "debug_unalign.apk"
  } else {
    //        newName = "etscanner-" + appName + "-" + buildTypeOfApp.toUpperCase() + "-v" + versionName + versionNameSuffix + "-ALIGNED" + ".apk"
    newName = "debug.apk"
  }
  buildVariant.packageApplication.outputFile = new File(apk.parentFile, newName)
}

android {
  compileSdkVersion cfg.compileVersion
  buildToolsVersion cfg.buildToolsVersion

  defaultConfig {
    applicationId "com.qingchengfit.fitcoach"
    minSdkVersion 15
    targetSdkVersion 26
    multiDexEnabled true
    versionCode cfg.trainer_version_code
    versionName cfg.trainer_version_name
    vectorDrawables.useSupportLibrary = true
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [packageName: 'cn.qingchengfit.staff',]
      }
    }
  }
  dataBinding {
    enabled true
  }
  useLibrary 'org.apache.http.legacy'



  signingConfigs {
    release {
      storeFile file("../qingcheng.keystore")
      storePassword "Qingcheng2014"
      keyAlias "Qingcheng"
      keyPassword "Qingcheng2014"
    }
  }
  dexOptions {
    javaMaxHeapSize "8g"
  }
  lintOptions {
    abortOnError false
  }

  flavorDimensions "qc"
  productFlavors {
    dev {
      minSdkVersion 21
      applicationId "com.qingchengfit.fitcoach.dev"
      manifestPlaceholders = [APP_NAME            : "内部测试"
                              , APP_SCHAME        : "qccoach"
                              , bdpush_authorities: "com.qingchengfit.fitcoach.dev.bdpush"
                              , APP_PACKAGE       : "com.qingchengfit.fitcoach.dev"
                              , file_provider     : "com.qingchengfit.fitcoach.dev.provider"

      ]
      ndk {
        abiFilter "armeabi-v7a"
      }
      dimension 'qc'
    }
    product {
      minSdkVersion 16
      applicationId "com.qingchengfit.fitcoach"
      manifestPlaceholders = [APP_NAME            : "青橙健身教练"
                              , APP_SCHAME        : "qccoach"
                              , bdpush_authorities: "com.qingchengfit.fitcoach.bdpush"
                              , APP_PACKAGE       : "com.qingchengfit.fitcoach"
                              , file_provider     : "com.qingchengfit.fitcoach.provider"]
      ndk {
        abiFilter "armeabi-v7a"
      }

      dimension 'qc'
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      debuggable false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      signingConfig signingConfigs.release
      debuggable true
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.1"
    resolutionStrategy.force "com.android.support:support-v4:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-v13:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:cardview-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:design:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:percent:${libs.supportVersion}"
  }
}

//自动加固
afterEvaluate {
  android.applicationVariants.all { variant ->
    variant.assemble.doLast {
      if (variant.buildType.name.contains('release')) {
        variant.outputs.all {
          output ->
            def apkpath = output.outputFile as File
            exec {
              ignoreExitValue true
              def rootFile = new File("output")
              commandLine "sh", rootFile.absolutePath+"/../reinforce.sh", apkpath, rootFile.absolutePath+"/.."
            }
        }

      }
    }
  }
}

dependencies {
  addComponent('saasbase','cn.qingchengfit.saasbase:saasbase:1.0.180726',false)
  addComponent('login','cn.qingchengfit.login:login:1.0.180710',true)

  implementation project(path: ':card')
  implementation project(path: ':student')
  implementation project(path: ':checkout')


  implementation 'org.glassfish:javax.annotation:10.0-b28'
  //  compile 'cn.qingchegfit.recruit:recruit:latest.integration'
  implementation 'cn.qingchegfit.widgets:weekview:1.1@aar'

  implementation fileTree(include: ['*.jar'], dir: 'libs')
//  implementation files('libs/wup-1.0.0-SNAPSHOT.jar')
//  implementation files('libs/pushservice-4.5.3.48.jar')
  implementation files('libs/pinyin4j-2.5.0.jar')
//  implementation files('libs/pushservice-4.5.6.88.jar')
  //  compile project(path: ':fir-sdk-1.3.7')
  implementation files('libs/pushservice-5.2.0.12.jar')
  implementation 'com.android.support:multidex:1.0.2'
  //若使用annotation需要单独引用,对于tinker的其他库都无需再引用
//  provided "com.tencent.tinker:tinker-android-anno:${libs.tinker}"
//  compile "com.tinkerpatch.sdk:tinkerpatch-android-sdk:${libs.tinkerpatch}"

  implementation 'com.getbase:floatingactionbutton:1.10.0'
  implementation 'uk.co.chrisjenx:calligraphy:2.1.0'
  implementation 'com.github.badoualy:stepper-indicator:1.0.6'
  implementation 'com.hkm.taglib:tag:1.6.0'
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3.1'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
  implementation "com.hannesdorfmann.fragmentargs:annotation:${libs.fragmentArg}"
  implementation('com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+')


  annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger}"
  annotationProcessor 'com.hannesdorfmann.fragmentargs:processor:3.0.2'
  annotationProcessor "com.anbillon.flabellum:flabellum-processor:${libs.flabellum}"
  annotationProcessor "com.anbillon.flabellum:dagger2:${libs.flabellum}"
  annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

}
apply plugin: 'auto-register'
autoregister {
  registerInfo = [[//自动注册组件
                   'scanInterface'          : 'cn.qingchengfit.router.IComponent'
                   , 'codeInsertToClassName': 'cn.qingchengfit.router.ComponentManager'
                   , 'registerMethodName'   : 'registerComponent'
                   , 'exclude'              : [//排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）
                                               'cn.qingchengfit.router.'.replaceAll("\\.",
                                                   "/") + ".*"]],
                  [//自动注册全局拦截器
                   'scanInterface'          : 'cn.qingchengfit.router.IGlobalCCInterceptor'
                   , 'codeInsertToClassName': 'cn.qingchengfit.router.GlobalCCInterceptorManager'
                   , 'registerMethodName'   : 'registerGlobalInterceptor'
                   , 'exclude'              : [//排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）
                                               'cn.qingchengfit.router.'.
                                                   replaceAll("\\.",
                                                       "/") + ".*"]],
                  [//自动注册跨进程通信时自定义类型的json转换器，可以用Gson、FastJson等工具来实现
                   // 参考： demo_base/src/main/java/com.billy.cc.demo.base.GsonParamConverter
                   'scanInterface'          : 'cn.qingchengfit.router.IParamJsonConverter'
                   , 'codeInsertToClassName': 'cn.qingchengfit.router.RemoteParamUtil'
                   , 'registerMethodName'   : 'initRemoteCCParamJsonConverter'
                   , 'exclude'              : [//排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）
                                               'cn.qingchengfit.router.'.
                                                   replaceAll("\\.",
                                                       "/") + ".*"]]]
}

