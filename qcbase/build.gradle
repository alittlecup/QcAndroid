apply plugin: "com.android.library"
apply plugin: "maven"

def libs = rootProject.ext.libraries
def cfg = rootProject.ext.configuration
android {
  compileSdkVersion cfg.compileVersion
  buildToolsVersion cfg.buildToolsVersion
  dataBinding {
    enabled true
  }
  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary = true
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [fragmentArgsLib               : 'true',
                     fragmentArgsSupportAnnotations: 'true']
      }
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.1"
    resolutionStrategy.force "com.android.support:support-v4:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-v13:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:cardview-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:design:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:percent:${libs.supportVersion}"
  }
}



dependencies {
  api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
  api 'com.jakewharton.timber:timber:4.0.1'
  api 'com.jakewharton.threetenabp:threetenabp:1.0.2'
  api "com.google.dagger:dagger:${libs.dagger}"
  api "com.google.dagger:dagger-android:${libs.dagger}"
  api "com.google.dagger:dagger-android-support:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger}"
  api "com.android.support:support-v4:${libs.supportVersion}"
  api "com.android.support:support-v13:${libs.supportVersion}"
  api "com.android.support:support-annotations:${libs.supportVersion}"
  api("com.android.support:appcompat-v7:${libs.supportVersion}") {
    exclude group: "android.arch.lifecycle", module: "runtime"
  }
  api "com.android.support:appcompat-v7:${libs.supportVersion}"
  api "com.android.support:cardview-v7:${libs.supportVersion}"
  api "com.android.support:design:${libs.supportVersion}"
  api "com.android.support:percent:${libs.supportVersion}"
  api("com.squareup.retrofit2:retrofit:${libs.retrofit}") {
    exclude module: 'okhttp'
  }
  api "com.squareup.retrofit2:adapter-rxjava:${libs.retrofit}"
  api "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
  api "com.squareup.okhttp3:okhttp:${libs.okhttp}"
  api "com.squareup.okhttp3:logging-interceptor:${libs.okhttp}"
  api "io.reactivex:rxandroid:${libs.rxandroid}"
//  api "io.reactivex:rxjava:${libs.rxjava}"
  api "io.reactivex.rxjava2:rxjava:2.1.8"
  api 'com.trello:rxlifecycle:1.0'
  api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
  // If you want to bind to Android-specific lifecycles
  api 'com.trello:rxlifecycle-android:1.0'
  // If you want pre-written Activities and Fragments you can subclass as providers
  api 'com.trello:rxlifecycle-components:1.0'
  api "com.jakewharton.rxbinding:rxbinding:${libs.rxbind}"
  api 'com.google.code.gson:gson:2.7'
  api 'com.nineoldandroids:library:2.4.0'
  api 'com.github.chrisbanes:PhotoView:1.2.6'
  api 'eu.davidea:flexible-adapter:5.0.0-rc3'
  api 'com.github.bumptech.glide:glide:3.7.0'
  api 'com.squareup.sqlbrite:sqlbrite:1.1.1'
  api 'com.tbruyelle.rxpermissions:rxpermissions:0.9.3@aar'
  //图片选择库
  api 'cn.qingchengfit.imagepicker:matisse:1.0.2'
  api('cn.qingchengfit.material-dialogs:material-dialogs:1.0.3') {
    transitive = true
  }
  api 'eu.davidea:flexible-adapter-databinding:1.0.0-b2'
  api 'com.umeng.analytics:analytics:6.1.2'
  api 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:1.8.16'
  //  api "me.henrytao:smooth-app-bar-layout:${libs.supportVersion}.0"
  api 'com.google.android:flexbox:0.3.0-alpha3'
  api 'com.github.rubensousa:gravitysnaphelper:1.1'
  annotationProcessor "com.hannesdorfmann.fragmentargs:processor:${libs.fragmentArg}"
  api "com.hannesdorfmann.fragmentargs:annotation:${libs.fragmentArg}"
  api 'com.getbase:floatingactionbutton:1.10.0'
  //fab
  api 'com.theartofdev.edmodo:android-image-cropper:2.4.5'
  //裁剪图片
  api 'com.commonsware.cwac:cam2:0.7.6'
  api 'com.github.clans:fab:1.6.4'
  //拍照
  api 'me.gujun.android.taggroup:library:1.4@aar'
  //taggroup
  api('com.upyun:upyun-android-sdk:2.0.1') {
    //upyun 又拍云
    exclude group: 'com.squareup.okhttp3'
  }

  //  api files('libs/Bughd_android_sdk_v1.3.7.jar')
  implementation 'com.amap.api:map2d:5.2.0'
  compile 'com.amap.api:search:5.0.0'
  implementation 'com.amap.api:location:3.7.0'


  implementation files(
      'libs/tbs_sdk_thirdapp_v3.1.0.1034_43100_sharewithdownload_obfs_20170301_182143.jar')
  implementation files('libs/mid-sdk-2.20.jar')
  api('com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.1.4')
  api 'com.dlazaro66.qrcodereaderview:qrcodereaderview:1.0.0'
  api 'com.airbnb.android:lottie:2.0.0'
  api('io.socket:socket.io-client:0.9.0') {
    // excluding org.json which is provided by Android
    exclude group: 'org.json', module: 'json'
  }

  // Room
  api "android.arch.persistence.room:runtime:1Web.0.0"
  api "android.arch.persistence.room:rxjava2:1.0.0"
  api 'com.squareup.phrase:phrase:1.1.0'
  api 'com.google.errorprone:error_prone_annotations:2.1.3'
  annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
  androidTestImplementation "android.arch.core:core-testing:1.0.0"
  testImplementation 'junit:junit:4.12'
  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  api "com.github.akarnokd:rxjava2-interop:0.11.5"
  api 'io.reactivex.rxjava2:rxandroid:2.0.1'


}

group 'cn.qingchengfit.widgets'
version "1.0.$today"
def ci = true
//def ci = "$isCI".endsWith("true")
//printf("ci" + ci)
uploadArchives {
  if (ci) {
    repositories {
      mavenDeployer {
        repository(url: uri('http://43.241.209.158:15004/repository/maven-releases/')) {
          authentication(userName: "admin", password: "admin123")
        }
        pom.artifactId = 'qcbase'
      }
    }
  } else {
    repositories {
      mavenDeployer {
        repository(url: uri('../../../repo'))
        pom.artifactId = 'qcbase'
        //=======

        //version '1.0.36'
        //uploadArchives {
        //  repositories {
        //    mavenDeployer {
        //      if (!isDependenceLocal.toBoolean()) {
        //        repository(url: uri('http://43.241.209.158:15004/repository/maven-releases/')) {
        //          authentication(userName: "admin", password: "admin123")
        //        }
        //      }else {
        //        repository(url: uri('../../../repo'))
        //      }
        //      pom.artifactId = 'qcbase'
        //    }
      }
    }
  }
}
