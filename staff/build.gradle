apply plugin: 'com.android.application'
//apply plugin: 'idea'
//apply plugin: 'fastdex.app'
def libs = rootProject.ext.libraries;
def config = rootProject.ext.configuration
/**
 *  打印超过50ms的任务*/
public class BuildTimeListener implements TaskExecutionListener, BuildListener {
  private Date clock
  private times = []

  @Override
  void beforeExecute(Task task) {
    clock = new Date()
  }

  @Override
  void afterExecute(Task task, TaskState taskState) {
    def ms = new Date().time - clock.time
    times.add([ms, task.path])

    //task.project.logger.warn "${task.path} spend ${ms}ms"
  }

  @Override
  void buildFinished(BuildResult result) {
    println "Task spend time:"
    for (time in times) {
      if (time[0] >= 50) {
        printf "%7sms  %s\n", time
      }
    }
  }

  @Override
  void buildStarted(Gradle gradle) {}

  @Override
  void projectsEvaluated(Gradle gradle) {}

  @Override
  void projectsLoaded(Gradle gradle) {}

  @Override
  void settingsEvaluated(Settings settings) {}
}

project.gradle.addListener(new BuildTimeListener())
/**
 *  打印超过50ms的任务  END*/


android {

  dataBinding {
    enabled true
  }

  //  freeline {
  //    hack true
  //    productFlavor 'internaltest'
  //  }

  compileSdkVersion config.compileVersion
  buildToolsVersion config.buildToolsVersion

  defaultConfig {
    applicationId "cn.qingchengfit.staffkit"
    minSdkVersion 16
    targetSdkVersion 25
    versionCode config.version_code
    versionName "${config.version_name}"
    multiDexEnabled true

    vectorDrawables.useSupportLibrary = true
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [packageName: 'cn.qingchengfit.staff',]
      }
    }
  }

  signingConfigs {
    release {
      storeFile file("../qingcheng.keystore")
      storePassword "Qingcheng2014"
      keyAlias "Qingcheng"
      keyPassword "Qingcheng2014"
    }
    debug {
      storeFile file("../qingcheng.keystore")
      storePassword "Qingcheng2014"
      keyAlias "Qingcheng"
      keyPassword "Qingcheng2014"
    }
  }
  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      signingConfig signingConfigs.release
      minifyEnabled false
      shrinkResources false
      //            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      debuggable true
      debug {
        ext.enableCrashlytics = false
      }
    }
  }

  flavorDimensions "qc"
  productFlavors {
    dev {
      applicationId "cn.qingchengfit.staffkit.internaltest"
      manifestPlaceholders = [APP_NAME          : "内部测试",
                              APP_SCHAME        : "qcstaff",
                              bdpush_authorities: "cn.qingchengfit.bdpush.internaltest",
                              APP_PACKAGE       : "cn.qingchengfit.staffkit.internaltest",
                              file_provider     : "cn.qingchengfit.staffkit.internaltest.provider"]
      ndk {
        abiFilter "armeabi"
      }
      dimension "qc"
    }
    product {
      applicationId "cn.qingchengfit.staffkit"
      manifestPlaceholders = [APP_NAME          : "青橙健身管理",
                              APP_SCHAME        : "qcstaff",
                              bdpush_authorities: "cn.qingchengfit.staffkit.bdpush",
                              APP_PACKAGE       : "cn.qingchengfit.staffkit", file_provider: "cn.qingchengfit.staffkit.provider"]
      ndk {
        abiFilter "armeabi"
      }
      dimension "qc"
    }


    //    less21 {
    //      applicationId "cn.qingchengfit.staffkit.self"
    //      manifestPlaceholders = [APP_NAME   : "SELF测试", bdpush_authorities: "cn.qingchengfit.bdpush.self",
    //                              APP_PACKAGE: "cn.qingchengfit.staffkit.self", file_provider: "cn.qingchengfit.staffkit.self.provider",]
    //      ndk {
    //        abiFilter "armeabi-v7a"
    //      }
    //    }
  }



  lintOptions {
    abortOnError false
    disable "ResourceType"
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'com/qq/jce/wup/wup.properties'
    exclude 'assets/xgwifi.xml'
    exclude 'assets/soconfig.cfg'
    exclude 'assets/jni.ini'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  dexOptions {
    javaMaxHeapSize "4g"
  }
  //  sourceSets {
  //    main{
  //      java.srcDirs = ['main/java','../build/generated/source/apt/dev/debug']
  //    }
  //    dev{
  //      java.srcDirs = ['main/java','dev/java','../build/generated/source/apt/dev/debug']
  //    }
  //  }
  configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.1"
    resolutionStrategy.force "com.android.support:support-v4:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-v13:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:cardview-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:design:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:percent:${libs.supportVersion}"
  }

  configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.1"
    resolutionStrategy.force "com.android.support:support-v4:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-v13:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:appcompat-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:cardview-v7:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:design:${libs.supportVersion}"
    resolutionStrategy.force "com.android.support:percent:${libs.supportVersion}"
  }
}

afterEvaluate {
  android.applicationVariants.all { variant ->
    variant.assemble.doLast {
      if (variant.buildType.name.contains('release')) {
        variant.outputs.all { output ->
          def apkpath = output.outputFile as File
          exec {
            ignoreExitValue true
            def rootFile = new File("output")
            commandLine "sh", rootFile.absolutePath + "/../reinforce.sh", apkpath,
                rootFile.absolutePath + "/.."
          }
        }
      }
    }
  }
}
tasks.withType(Test) {
  systemProperty "robolectric.logging", "stdout"
}
configurations.all {
  resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
}

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
  }
}


ext.isTask = { name ->
  println project.gradle.startParameter.taskNames
  return project.gradle.startParameter.taskNames.contains(name)
}

task buildWithAP(dependsOn: build) {}
//task fastDebug (dependsOn: fastdex) {}

dependencies {
  implementation project(path: ':saasbase')
  implementation project(path: ':shop')
  //  implementation 'cn.qingchengfit.chat:qcim:1.0.0'
  //  implementation 'cn.qingchengfit.chat:sdk:1.0.0'

  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation('com.github.afollestad.material-dialogs:core:0.8.5.5@aar') {
    transitive = true
  }
  //  compile files('libs/java-sdk-3.1.jar')//包含 到了chat sdk  这个得改
  implementation files('libs/pinyin4j-2.5.0.jar')
  compile 'com.android.support:multidex:1.0.1'
  implementation "org.glassfish:javax.annotation:${libs.javax_annotation}"
  implementation 'com.flyco.banner:FlycoBanner_Lib:2.0.2@aar'
  implementation 'jp.wasabeef:recyclerview-animators:2.2.1'
  implementation 'su.j2e:rv-joiner:1.0.9'

  implementation 'com.dlazaro66.qrcodereaderview:qrcodereaderview:1.0.0'
  implementation('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.9.2@aar') {
    transitive = true
  }
  //支持左滑菜单的recyclerview
  implementation 'com.tubb.smrv:swipemenu-recyclerview:5.3.0'
  //图片选择库
  //  implementation 'com.zhihu.android:matisse:0.5.0-alpha4'
  //activity intent 传参数
  //  implementation 'se.emilsjolander:intentbuilder-compiler:0.14.0'
  //  annotationProcessor 'se.emilsjolander:intentbuilder-compiler:0.14.0'
  //fragment 传参数
  // recyclerview 分组 header view
  implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'
  implementation 'com.github.PhilJay:MPAndroidChart:v3.0.1'
  //  productCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
  //  internaltestCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
  //  selfCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  //  debugapi 'io.github.skyhacker2:sqliteonweb:1.0.1'
  //  releaseapi 'io.github.skyhacker2:sqliteonweb-no-op:1.0.2'
  implementation 'com.wanjian:cockroach:0.0.5'

  implementation('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.9.2@aar') {
    transitive = true
  }
  implementation 'com.jakewharton.threetenabp:threetenabp:1.0.2'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })



  //  if (isTask("buildWithAP") ) {
  println "Going to run annotation processors ..."
  annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
  annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger}"
  annotationProcessor 'com.hannesdorfmann.fragmentargs:processor:3.0.2'
  annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
  annotationProcessor "com.anbillon.flabellum:flabellum-processor:${libs.flabellum}"
  annotationProcessor "com.anbillon.flabellum:dagger2:${libs.flabellum}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
  annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

  //  }
  //  println 'no processor'
  //  } else {
  //    println "skip to run annotation processors ..."
  //
  //
  //    // just add generated classes to the classpath
  //    // must be in else branch or multiple AP calls will collide!
  //    println "sourseset"
  //
  //    android.sourceSets.main.java.srcDirs += projectDir.absolutePath + "/build/generated/source/apt"
  //    println android.sourceSets.dev.java.srcDirs
  //
  //  }

  //  compile project(path: ':trainer')
}
//afterEvaluate {
//  android.applicationVariants.all { variant ->
//    variant.assemble.doLast {
//      if (variant.buildType.name.contains('debug')) {
//        variant.outputs.all {
//          output ->
//            def apkpath = output.outputFile as File
//            exec {
//              ignoreExitValue true
//              def rootFile = new File("output")
//              commandLine "mv", projectDir.absolutePath + "/build/generated/source/apt/dev/debug", rootFile.absolutePath
//            }
//        }
//
//      }
//    }
//  }
//}

//apply from: 'tinkerpatch.gradle'
//apply plugin: 'com.antfortune.freeline'
